using Microsoft.EntityFrameworkCore;

namespace FileStorge.VerificationProviders
{
    public sealed class Doc : FileType
    {
        public Doc()
        {
            Name = "Doc";
            Description = "Doc Document";
            AddExtensions("Doc", "doc");
            AddSignatures(
                new byte[] { 0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1 }
            );
        }
    }


    public sealed class Docx : FileType
    {
        public Docx()
        {
            Name = "Docx";
            Description = "Docx Document";
            AddExtensions("Docx", "docx");
            AddSignatures(
                [0x50, 0x4B, 0x03, 0x04],
                [0x50, 0x4B, 0x05, 0x06],
                [0x50, 0x4B, 0x07, 0x08]
            );
        }
    }

    public sealed class Txt : FileType
    {
        public Txt()
        {
            Name = "Txt";
            Description = "Txt Document";
            AddExtensions("Txt", "txt");
            AddSignatures(
                new byte[] { 0xEF, 0xBB, 0xBF },
                new byte[] { 0xFF, 0xFE },
                new byte[] { 0xFE, 0xFF },
                new byte[] { 0xFF, 0xFE, 0x00, 0x00 },
                new byte[] { 0x00, 0x00, 0xFE, 0xFF },
                new byte[] { 0x0E, 0xFE, 0xFF },
                new byte[] { 0x2B, 0x2F, 0x76, 0x38 },
                new byte[] { 0x2B, 0x2F, 0x76, 0x39 },
                new byte[] { 0x2B, 0x2F, 0x76, 0x2B },
                new byte[] { 0x2B, 0x2F, 0x76, 0x2F }
            );
        }
    }

    public sealed class PDF : FileType
    {
        public PDF()
        {
            Name = "PDF";
            Description = "PDF Document";
            AddExtensions("PDF", "pdf");
            AddSignatures(
                new byte[] { 0x25, 0x50, 0x44, 0x46, 0x2D }
            );
        }
    }

    public sealed class Jpeg : FileType
    {
        public Jpeg()
        {
            Name = "JPEG";
            Description = "JPEG IMAGE";
            AddExtensions("jpeg", "jpg");
            AddSignatures(
                new byte[] { 0xFF, 0xD8, 0xFF, 0xE0 },
                new byte[] { 0xFF, 0xD8, 0xFF, 0xE2 },
                new byte[] { 0xFF, 0xD8, 0xFF, 0xE3 }
            );
        }
    }

    public sealed class Mp3 : FileType
    {
        public Mp3()
        {
            Name = "MP3";
            Description = "MP3 Audio File";
            AddExtensions("mp3");
            AddSignatures(
                new byte[] { 0x49, 0x44, 0x33 }
            );
        }
    }

    public sealed class Png : FileType
    {
        public Png()
        {
            Name = "PNG";
            Description = "PNG Image";
            AddExtensions("png");
            AddSignatures(
                new byte[] { 0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A }
            );
        }
    }

    public sealed class Mp4 : FileType
    {
        public Mp4()
        {
            Name = "MP4";
            Description = "MP4 Video File";
            AddExtensions("mp4");
            SignatureOffset = 4;
            AddSignatures(
                new byte[] { 0x66, 0x74, 0x79, 0x70, 0x69, 0x73, 0x6F, 0x6D },
                new byte[] { 0x66, 0x74, 0x79, 0x70, 0x6D, 0x70, 0x34, 0x32 },
                new byte[] { 0x66, 0x74, 0x79, 0x70, 0x4D, 0x53, 0x4E, 0x56 }
            );
        }
    }

    public sealed class Ppt : FileType
    {
        public Ppt()
        {
            Name = "PPT";
            Description = "PPT Document";
            AddExtensions("ppt");
            AddSignatures(
                new byte[] { 0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1 }
            );
        }
    }

    public sealed class Pptx : FileType
    {
        public Pptx()
        {
            Name = "PPTX";
            Description = "PPTX Document";
            AddExtensions("pptx");
            AddSignatures(
                new byte[] { 0x50, 0x4B, 0x03, 0x04 },
                new byte[] { 0x50, 0x4B, 0x05, 0x06 },
                new byte[] { 0x50, 0x4B, 0x07, 0x08 }
            );
        }
    }

    public sealed class Xls : FileType
    {
        public Xls()
        {
            Name = "XLS";
            Description = "XLS Sheet";
            AddExtensions("xls");
            AddSignatures(
                new byte[] { 0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1 }
            );
        }
    }

    public sealed class Xlsx : FileType
    {
        public Xlsx()
        {
            Name = "XLSX";
            Description = "XLSX Sheet";
            AddExtensions("xlsx");
            AddSignatures(
                new byte[] { 0x50, 0x4B, 0x03, 0x04 },
                new byte[] { 0x50, 0x4B, 0x05, 0x06 },
                new byte[] { 0x50, 0x4B, 0x07, 0x08 }
            );
        }
    }

    public sealed class Mpp : FileType
    {
        public Mpp()
        {
            Name = "MPP";
            Description = "MPP Project File";
            AddExtensions("mpp");
            AddSignatures(
                new byte[] { 0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1 }
            );
        }
    }

    public sealed class Msg : FileType
    {
        public Msg()
        {
            Name = "MSG";
            Description = "MSG Outlook Item File";
            AddExtensions("msg");
            AddSignatures(
                new byte[] { 0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1 }
            );
        }
    }

    public sealed class Psd : FileType
    {
        public Psd()
        {
            Name = "PSD";
            Description = "Adobe Photoshop image";
            AddExtensions("psd");
            AddSignatures(
                new byte[] { 0x38, 0x42, 0x50, 0x53, 0x00, 0x01 }

            );
        }
    }

    public sealed class Bak : FileType
    {
        public Bak()
        {
            Name = "BAK";
            Description = "Backup data";
            AddExtensions("bak");
            AddSignatures(
                new byte[] { 0x4D, 0x53, 0x53, 0x51, 0x4C, 0x42, 0x41, 0x4B },
                new byte[] { 0x54, 0x41, 0x50, 0x45, 0x00, 0x00, 0x03, 0x00, 0x8C, 0x00, 0x0E, 0x01 },
                new byte[] { 0x4D, 0x49, 0x55, 0x49, 0x20, 0x42, 0x41, 0x43, 0x4B, 0x55, 0x50, 0x0A }
            );
        }
    }

    public sealed class Dwg : FileType
    {
        public Dwg()
        {
            Name = "DWG";
            Description = "AutoCAD drawing";
            AddExtensions("dwg");
            AddSignatures(
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x35 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x38 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x32, 0x31 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x32, 0x34 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x32, 0x37 },
                new byte[] { 0x4D, 0x43, 0x30, 0x2E, 0x30 },
                new byte[] { 0x41, 0x43, 0x31, 0x2E, 0x32 },
                new byte[] { 0x41, 0x43, 0x31, 0x2E, 0x34, 0x30 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x30, 0x36 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x30, 0x39 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x30 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x31 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x32 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x33 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x31, 0x34 },
                new byte[] { 0x41, 0x43, 0x32, 0x2E, 0x35, 0x30 },
                new byte[] { 0x41, 0x43, 0x31, 0x2E, 0x35, 0x30 },
                new byte[] { 0x41, 0x43, 0x32, 0x2E, 0x31, 0x30 },
                new byte[] { 0x41, 0x43, 0x32, 0x2E, 0x32, 0x31 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x30, 0x31 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x30, 0x32 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x30, 0x33 },
                new byte[] { 0x41, 0x43, 0x31, 0x30, 0x30, 0x34 }
            );
        }
    }

    public sealed class Skp : FileType
    {
        public Skp()
        {
            Name = "SKP";
            Description = "SketchUp model";
            AddExtensions("skp");
            AddSignatures(
                new byte[] { 0xFF, 0xFE, 0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00 }
            );
        }
    }

    public sealed class Eml : FileType
    {
        public Eml()
        {
            Name = "EML";
            Description = "Email Message File";
            AddExtensions("eml");
            AddSignatures(
                // "From:"
                new byte[] { 0x46, 0x72, 0x6F, 0x6D, 0x3A },
                // "Return-Path:"
                new byte[] { 0x52, 0x65, 0x74, 0x75, 0x72, 0x6E, 0x2D, 0x50, 0x61, 0x74, 0x68, 0x3A },
                // "Received:"
                new byte[] { 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3A },
                // "Subject:"
                new byte[] { 0x53, 0x75, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x3A },
                // "Date:"
                new byte[] { 0x44, 0x61, 0x74, 0x65, 0x3A },
                // "To:"
                new byte[] { 0x54, 0x6F, 0x3A },
                // "Message-ID:"
                new byte[] { 0x4D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2D, 0x49, 0x44, 0x3A },
                // "MIME-Version:"
                new byte[] { 0x4D, 0x49, 0x4D, 0x45, 0x2D, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3A },
                // "Content-Type:"
                new byte[] { 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2D, 0x54, 0x79, 0x70, 0x65, 0x3A },
                // "Delivered-To:"
                new byte[] { 0x44, 0x65, 0x6C, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x2D, 0x54, 0x6F, 0x3A },
                // "X-Google-Smtp-Source:"
                new byte[] { 0x58, 0x2D, 0x47, 0x6F, 0x6F, 0x67, 0x6C, 0x65, 0x2D, 0x53, 0x6D, 0x74, 0x70, 0x2D, 0x53, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x3A },
                // "Cc:"
                new byte[] { 0x43, 0x63, 0x3A },
                // "Bcc:"
                new byte[] { 0x42, 0x63, 0x63, 0x3A },
                // "Reply-To:"
                new byte[] { 0x52, 0x65, 0x70, 0x6C, 0x79, 0x2D, 0x54, 0x6F, 0x3A },
                // "In-Reply-To:"
                new byte[] { 0x49, 0x6E, 0x2D, 0x52, 0x65, 0x70, 0x6C, 0x79, 0x2D, 0x54, 0x6F, 0x3A },
                // "References:"
                new byte[] { 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6E, 0x63, 0x65, 0x73, 0x3A },
                // "Content-Transfer-Encoding:"
                new byte[] { 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2D, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66, 0x65, 0x72, 0x2D, 0x45, 0x6E, 0x63, 0x6F, 0x64, 0x69, 0x6E, 0x67, 0x3A },
                // "X-Mailer:"
                new byte[] { 0x58, 0x2D, 0x4D, 0x61, 0x69, 0x6C, 0x65, 0x72, 0x3A },
                // "X-Originating-IP:"
                new byte[] { 0x58, 0x2D, 0x4F, 0x72, 0x69, 0x67, 0x69, 0x6E, 0x61, 0x74, 0x69, 0x6E, 0x67, 0x2D, 0x49, 0x50, 0x3A },
                // "Authentication-Results:"
                new byte[] { 0x41, 0x75, 0x74, 0x68, 0x65, 0x6E, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2D, 0x52, 0x65, 0x73, 0x75, 0x6C, 0x74, 0x73, 0x3A },
                // "List-Unsubscribe:"
                new byte[] { 0x4C, 0x69, 0x73, 0x74, 0x2D, 0x55, 0x6E, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x3A },
                // "Importance:"
                new byte[] { 0x49, 0x6D, 0x70, 0x6F, 0x72, 0x74, 0x61, 0x6E, 0x63, 0x65, 0x3A },
                // "X-Priority:"
                new byte[] { 0x58, 0x2D, 0x50, 0x72, 0x69, 0x6F, 0x72, 0x69, 0x74, 0x79, 0x3A }
            );
        }
    }

}
